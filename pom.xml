<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version> 
        <!-- <version>2.6.7</version> -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
	<!-- <version>2.7.0</version> -->
	<groupId>com.dummy</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>19</java.version>
		<mockitoversion>4.6.0</mockitoversion>

		<!--BEGIN : pog-setup-guide -->
		<tetris-log.version>0.0.6</tetris-log.version>
		<azure-keyvault-secrets.version>4.4.2</azure-keyvault-secrets.version>
		<azure-storage-blob.version>12.16.1</azure-storage-blob.version>
		<spring-cloud.version>2021.0.1</spring-cloud.version>
		<azure-cosmos.version>4.29.1</azure-cosmos.version>
		<azure-spring-data-cosmos.version>3.20.0</azure-spring-data-cosmos.version>
		<jsoup.version>1.13.1</jsoup.version>
		<html2pdf.version>4.0.1</html2pdf.version>
		<gson.version>2.9.0</gson.version>
		<tetris-thymeleaf.version>3.1.0.M1</tetris-thymeleaf.version>
		<tetris-lombok.version>1.18.22</tetris-lombok.version>
		<azure-identity.version>1.5.1</azure-identity.version>
		<commons-io.version>2.11.0</commons-io.version>
		<google-guava.version>31.1-jre</google-guava.version>
		<opencsv.version>5.6</opencsv.version>
		<spring-beans.version>5.3.20</spring-beans.version>
		<tetris-maven-surefire-plugin.version>2.22.2</tetris-maven-surefire-plugin.version>
		<tetris-maven-failsafe-plugin.version>2.22.2</tetris-maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<tetris-maven-compiler-plugin.version>3.8.1</tetris-maven-compiler-plugin.version>
		<log4j2.version>2.17.1</log4j2.version>
		<logback.version>1.2.9</logback.version>
		<netty.version>4.1.77.Final</netty.version>
		<tcnative.version>2.0.46.Final</tcnative.version>
		<nimbusds.version>9.35</nimbusds.version>
		<ehcache.version>3.9.9</ehcache.version>
		<owasp-encoder-version>1.2.3</owasp-encoder-version>
		<jenkins.deploy.repository />
		<jenkins.deploy.url>https://artifactory.corp.ad.ctc/artifactory/${jenkins.deploy.repository}
		</jenkins.deploy.url>
		<!--END : pog-setup-guide -->

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.opencsv/opencsv -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${tetris-lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>

		<!-- BEGIN : JUnit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- END : JUnit 5 -->

		<!-- BEGIN : Mockito -->

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockitoversion}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockitoversion}</version>
			<scope>test</scope>
		</dependency>

		<!-- END : Mockito -->

		<!--BEGIN : pog-setup-guide -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		 -->
		<!-- Veracode bug fix -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-beans.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${google-guava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>html2pdf</artifactId>
			<version>${html2pdf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${tetris-thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cantire.tetris</groupId>
			<artifactId>tetris-log</artifactId>
			<version>${tetris-log.version}</version>
		</dependency>
		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
			<version>${owasp-encoder-version}</version>
		</dependency>		

		<!-- Ehcache Implementation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>	
		
<!-- 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>	
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${tetris-lombok.version}</version>
			<scope>provided</scope>
		</dependency>			
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.thoughtworks.xstream</groupId>
					<artifactId>xstream</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk15on</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcpkix-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>			
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-security-keyvault-secrets</artifactId>
			<version>${azure-keyvault-secrets.version}</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>${azure-identity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-spring-data-cosmos</artifactId>
			<version>${azure-spring-data-cosmos.version}</version>
		</dependency>
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>oauth2-oidc-sdk</artifactId>
			<version>${nimbusds.version}</version>
		</dependency>	
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-storage-blob</artifactId>
			<version>${azure-storage-blob.version}</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-cosmos</artifactId>
			<version>${azure-cosmos.version}</version>
		</dependency>			
 -->			

		<!--END : pog-setup-guide -->



	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.8</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
